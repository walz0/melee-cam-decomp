void CmSubject_UpdateBoundsAll(void)
{
  float fVar1;
  bool bVar2;
  CmSubject *subject;
  double dVar3;
  double dVar4;
  double dVar5;
  double dVar6;
  double dVar7;
  
  dVar7 = -0.5;
  dVar6 = 0.5;
  dVar5 = 0.0;
  for (subject = UsedCmSubjectPoolHead; subject != (CmSubject *)0x0; subject = subject->prev) {
    bVar2 = CmSubject_IsEnabled(subject);
    if (bVar2) {
      fVar1 = (subject->bounds).left;
      dVar3 = (subject->default_bounds).left;
      dVar4 = (fVar1 - dVar3);
      if (dVar5 != dVar4) {
        if (dVar4 <= dVar6) {
          if (dVar7 <= dVar4) {
            (subject->default_bounds).left = fVar1;
          }
          else {
            (subject->default_bounds).left = (dVar3 - dVar6);
          }
        }
        else {
          (subject->default_bounds).left = (dVar3 + dVar6);
        }
      }
      fVar1 = (subject->bounds).right;
      dVar3 = (subject->default_bounds).right;
      dVar4 = (fVar1 - dVar3);
      if (dVar5 != dVar4) {
        if (dVar4 <= dVar6) {
          if (dVar7 <= dVar4) {
            (subject->default_bounds).right = fVar1;
          }
          else {
            (subject->default_bounds).right = (dVar3 - dVar6);
          }
        }
        else {
          (subject->default_bounds).right = (dVar3 + dVar6);
        }
      }
      fVar1 = (subject->bounds).top;
      dVar3 = (subject->default_bounds).top;
      dVar4 = (fVar1 - dVar3);
      if (dVar5 != dVar4) {
        if (dVar4 <= dVar6) {
          if (dVar7 <= dVar4) {
            (subject->default_bounds).top = fVar1;
          }
          else {
            (subject->default_bounds).top = (dVar3 - dVar6);
          }
        }
        else {
          (subject->default_bounds).top = (dVar3 + dVar6);
        }
      }
      fVar1 = (subject->bounds).bottom;
      dVar3 = (subject->default_bounds).bottom;
      dVar4 = (fVar1 - dVar3);
      if (dVar5 != dVar4) {
        if (dVar4 <= dVar6) {
          if (dVar7 <= dVar4) {
            (subject->default_bounds).bottom = fVar1;
          }
          else {
            (subject->default_bounds).bottom = (dVar3 - dVar6);
          }
        }
        else {
          (subject->default_bounds).bottom = (dVar3 + dVar6);
        }
      }
      dVar3 = subject->size;
      dVar4 = (subject->default_size - dVar3);
      if (dVar5 != dVar4) {
        if (dVar4 <= dVar6) {
          if (dVar7 <= dVar4) {
            subject->size = subject->default_size;
          }
          else {
            subject->size = (dVar3 - dVar6);
          }
        }
        else {
          subject->size = (dVar3 + dVar6);
        }
      }
    }
  }
  return;
}